// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ArgonneDashboard.ArgonneServiceClient.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class AdSentimentData
    {
        /// <summary>
        /// Initializes a new instance of the AdSentimentData class.
        /// </summary>
        public AdSentimentData() { }

        /// <summary>
        /// Initializes a new instance of the AdSentimentData class.
        /// </summary>
        public AdSentimentData(Guid? campaignId = default(Guid?), Guid? displayedAdId = default(Guid?), double? anger = default(double?), double? contempt = default(double?), double? disgust = default(double?), double? fear = default(double?), double? happiness = default(double?), double? neutral = default(double?), double? sadness = default(double?), double? surprise = default(double?))
        {
            CampaignId = campaignId;
            DisplayedAdId = displayedAdId;
            Anger = anger;
            Contempt = contempt;
            Disgust = disgust;
            Fear = fear;
            Happiness = happiness;
            Neutral = neutral;
            Sadness = sadness;
            Surprise = surprise;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "campaignId")]
        public Guid? CampaignId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "displayedAdId")]
        public Guid? DisplayedAdId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "anger")]
        public double? Anger { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contempt")]
        public double? Contempt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "disgust")]
        public double? Disgust { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fear")]
        public double? Fear { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "happiness")]
        public double? Happiness { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "neutral")]
        public double? Neutral { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sadness")]
        public double? Sadness { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "surprise")]
        public double? Surprise { get; set; }

    }
}
