// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ArgonneDashboard.ArgonneServiceClient
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// REST services for Project Argonne
    /// </summary>
    public partial interface IArgonneAPI : IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


            /// <summary>
        /// Get all Ads
        /// </summary>
        /// <param name='pageNumber'>
        /// </param>
        /// <param name='pageSize'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<AdDto>>> ApiAdminAdGetWithHttpMessagesAsync(int? pageNumber = default(int?), int? pageSize = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Create a new Ad
        /// </summary>
        /// Id field does not need to be supplied, it is ignored. The unique
        /// identifier for the Ad will be generated by the system.
        /// <param name='item'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AdDto>> ApiAdminAdPostWithHttpMessagesAsync(AdDto item = default(AdDto), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get a Ad by id
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='id'>
        /// unique identifier for a Ad
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AdDto>> ApiAdminAdByIdGetWithHttpMessagesAsync(string id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Modify an existing Ad
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='id'>
        /// unique identifier for a Ad
        /// </param>
        /// <param name='updatedRecord'>
        /// modified Ad model
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiAdminAdByIdPutWithHttpMessagesAsync(string id, AdDto updatedRecord = default(AdDto), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Delete an existing Ad
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='id'>
        /// unique identifier for a Ad
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiAdminAdByIdDeleteWithHttpMessagesAsync(string id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get all campaigns an ad is in
        /// </summary>
        /// The relationship between Ad and Campaign is read-only from the Ad
        /// API.
        /// For create/update/delete operations see the Campaign API.
        /// <param name='id'>
        /// unique identifier for an ad
        /// </param>
        /// <param name='pageNumber'>
        /// </param>
        /// <param name='pageSize'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<AdInCampaignDto>>> ApiAdminAdByIdCampaignsGetWithHttpMessagesAsync(string id, int? pageNumber = default(int?), int? pageSize = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get All Impressions for an ad
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='adid'>
        /// unique identifier for an ad
        /// </param>
        /// <param name='pageNumber'>
        /// </param>
        /// <param name='pageSize'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<ImpressionDto>>> ApiAdminAdByAdidImpressionsGetWithHttpMessagesAsync(string adid, int? pageNumber = default(int?), int? pageSize = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get All Impressions for a campaign
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='adid'>
        /// unique identifier for a campaign
        /// </param>
        /// <param name='pageNumber'>
        /// </param>
        /// <param name='pageSize'>
        /// </param>
        /// <param name='after'>
        /// timestamp for start of series
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<ImpressionDto>>> ApiAdminAdByAdidImpressionsAfterGetWithHttpMessagesAsync(string adid, int? pageNumber = default(int?), int? pageSize = default(int?), DateTime? after = default(DateTime?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get all campaigns
        /// </summary>
        /// <param name='pageNumber'>
        /// </param>
        /// <param name='pageSize'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<CampaignDto>>> ApiAdminCampaignGetWithHttpMessagesAsync(int? pageNumber = default(int?), int? pageSize = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Modify an existing Campaign
        /// </summary>
        /// Campaign Id must be a valid GUID
        /// <param name='updatedRecord'>
        /// modified Campaign model
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiAdminCampaignPutWithHttpMessagesAsync(CampaignDto updatedRecord = default(CampaignDto), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Create a new Campaign
        /// </summary>
        /// Id field does not need to be supplied, it is ignored. The unique
        /// identifier for the Campaign will be generated by the system.
        /// <param name='item'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<CampaignDto>> ApiAdminCampaignPostWithHttpMessagesAsync(CampaignDto item = default(CampaignDto), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get a campaign by id
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='id'>
        /// unique identifier for a campaign
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<CampaignDto>> ApiAdminCampaignByIdGetWithHttpMessagesAsync(string id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Delete an existing Campaign
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='id'>
        /// unique identifier for a Campaign
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiAdminCampaignByIdDeleteWithHttpMessagesAsync(string id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get all ads for a campaign
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='campaignid'>
        /// unique identifier for a campaign
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<AdInCampaignDto>>> ApiAdminCampaignByCampaignidAdsGetWithHttpMessagesAsync(string campaignid, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get ad in a campaign
        /// </summary>
        /// Id must be a valid GUID
        /// AdId must be a valid GUID
        /// <param name='campaignid'>
        /// unique identifier for a campaign
        /// </param>
        /// <param name='adid'>
        /// unique identifier for an ad
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AdInCampaignDto>> ApiAdminCampaignByCampaignidAdsByAdidGetWithHttpMessagesAsync(string campaignid, string adid, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Remove an ad from a campaign
        /// </summary>
        /// Id must be a valid GUID.
        /// AdId must be a valid GUID.
        /// <param name='campaignid'>
        /// unique identifier for a Campaign
        /// </param>
        /// <param name='adid'>
        /// unique identifier for an ad
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiAdminCampaignByCampaignidAdsByAdidDeleteWithHttpMessagesAsync(string campaignid, string adid, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Modify properties of an existing Campaign to Ad relationship
        /// </summary>
        /// Campaign Id must be a valid GUID.
        /// Ad Id must be a valid GUID
        /// <param name='updatedRecord'>
        /// modified model
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiAdminCampaignAdsPutWithHttpMessagesAsync(AdInCampaignDto updatedRecord = default(AdInCampaignDto), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Add an Ad to a Campaign
        /// </summary>
        /// An add can be in multiple campaigns at the same time
        /// <param name='item'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AdInCampaignDto>> ApiAdminCampaignAdsPostWithHttpMessagesAsync(AdInCampaignDto item = default(AdInCampaignDto), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get all Devices for a campaign
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='campaignid'>
        /// unique identifier for a campaign
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<Devices>>> ApiAdminCampaignByCampaignidDevicesGetWithHttpMessagesAsync(string campaignid, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Add a Device to a Campaign
        /// </summary>
        /// A device can only be in one campaign at a time.
        /// If a device is already in another campaign when this is called it
        /// will be removed from the old campaign.
        /// <param name='campaignid'>
        /// unique identifier for a campaign
        /// </param>
        /// <param name='deviceid'>
        /// unique identifier for a device
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiAdminCampaignByCampaignidDevicesByDeviceidPostWithHttpMessagesAsync(string campaignid, string deviceid, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Remove a device from a campaign
        /// </summary>
        /// Id must be a valid GUID.
        /// DeviceId must be a valid GUID.
        /// <param name='campaignid'>
        /// unique identifier for a Campaign
        /// </param>
        /// <param name='deviceid'>
        /// unique identifier for a device
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiAdminCampaignByCampaignidDevicesByDeviceidDeleteWithHttpMessagesAsync(string campaignid, string deviceid, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get All Impressions for a campaign
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='campaignid'>
        /// unique identifier for a campaign
        /// </param>
        /// <param name='pageNumber'>
        /// </param>
        /// <param name='pageSize'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<ImpressionDto>>> ApiAdminCampaignByCampaignidImpressionsGetWithHttpMessagesAsync(string campaignid, int? pageNumber = default(int?), int? pageSize = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get All Impressions for a campaign
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='campaignid'>
        /// unique identifier for a campaign
        /// </param>
        /// <param name='pageNumber'>
        /// </param>
        /// <param name='pageSize'>
        /// </param>
        /// <param name='after'>
        /// timestamp for start of series
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<ImpressionDto>>> ApiAdminCampaignByCampaignidImpressionsAfterGetWithHttpMessagesAsync(string campaignid, int? pageNumber = default(int?), int? pageSize = default(int?), DateTime? after = default(DateTime?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get the highest scoring (average) emotion for a campaign during an
        /// interval of time
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='campaignid'>
        /// unique identifier for a campaign
        /// </param>
        /// <param name='pageNumber'>
        /// </param>
        /// <param name='pageSize'>
        /// </param>
        /// <param name='start'>
        /// timestamp for start of series
        /// </param>
        /// <param name='end'>
        /// timestamp for end of series
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<string>> ApiAdminCampaignByCampaignidEmotionsStrongestGetWithHttpMessagesAsync(string campaignid, int? pageNumber = default(int?), int? pageSize = default(int?), DateTime? start = default(DateTime?), DateTime? end = default(DateTime?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get the highest scoring (average) emotion for a campaign during an
        /// interval of time
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='campaignid'>
        /// unique identifier for a campaign
        /// </param>
        /// <param name='pageNumber'>
        /// </param>
        /// <param name='pageSize'>
        /// </param>
        /// <param name='start'>
        /// timestamp for start of series
        /// </param>
        /// <param name='end'>
        /// timestamp for end of series
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<AdAggregateData>>> ApiAdminCampaignByCampaignidImpressionsAggregateGetWithHttpMessagesAsync(string campaignid, int? pageNumber = default(int?), int? pageSize = default(int?), DateTime? start = default(DateTime?), DateTime? end = default(DateTime?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get all devices
        /// </summary>
        /// <param name='pageNumber'>
        /// </param>
        /// <param name='pageSize'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<DeviceDto>>> ApiAdminDeviceGetWithHttpMessagesAsync(int? pageNumber = default(int?), int? pageSize = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Create a new device
        /// </summary>
        /// Id field does not need to be supplied, it is ignored. The unique
        /// identifier for the device will be generated by the system.
        /// <param name='item'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<DeviceDto>> ApiAdminDevicePostWithHttpMessagesAsync(DeviceDto item = default(DeviceDto), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get a device by id
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='id'>
        /// unique identifier for a device
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<DeviceDto>> ApiAdminDeviceByIdGetWithHttpMessagesAsync(string id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Modify an existing device
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='id'>
        /// unique identifier for a device
        /// </param>
        /// <param name='updatedRecord'>
        /// modified device model
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiAdminDeviceByIdPutWithHttpMessagesAsync(string id, DeviceDto updatedRecord = default(DeviceDto), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Delete an existing device
        /// </summary>
        /// Id must be a valid GUID
        /// <param name='id'>
        /// unique identifier for a device
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiAdminDeviceByIdDeleteWithHttpMessagesAsync(string id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
